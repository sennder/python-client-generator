name: CI/CD Pipeline

on: [push]

jobs:
  # build:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       python-version: ["3.8", "3.9", "3.10"]
  #
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Set up Python ${{ matrix.python-version }}
  #     uses: actions/setup-python@v3
  #     with:
  #       python-version: ${{ matrix.python-version }}
  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       python -m pip install poetry==1.1.14
  #       poetry install
  #   - name: Lint 
  #     run: |
  #       source `poetry env info --path`/bin/activate
  #       black . --check
  #       mypy .
  #       flake8
  #       isort --check .
  #   - name: Test with pytest
  #     run: |
  #       poetry run pytest --cov-report xml --cov-report term --cov=python_client_generator 
    # TODO: set up codecov once the repo is public
    # - name: Upload coverage to Codecov
    #   uses: codecov/codecov-action@v1
    #   with:
    #     file: ./coverage.xml

  test-commits:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 18
    - name: Install commitlint 
      run: |
        npm install -g @commitlint/config-conventional @commitlint/cli
    - name: Git fetch
      run: |
        git fetch origin main
    - name: Test commits
      run: |
        commitlint --from $(git merge-base origin/main HEAD) --to HEAD

  # release:
  #   runs-on: ubuntu-latest
  #   # needs: [build, test-commits]
  #   needs: [test-commits]
  #   if: github.ref == 'refs/heads/main'
  #   steps:
  #     - run: echo "I am running."

  release:
    name: Release
    runs-on: ubuntu-latest
  #   # needs: [build, test-commits]
    needs: [test-commits]
  #   if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
      - name: Install semantic release
        run: >
          npm install -g semantic-release 
          @semantic-release/changelog 
          @semantic-release/git 
          @semantic-release/exec 
          conventional-changelog-conventionalcommits
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

